<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="221" passed="186" failed="35" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-11T13:46:49 UTC" name="Surefire suite" finished-at="2025-07-11T13:47:18 UTC" duration-ms="28738">
    <groups>
    </groups>
    <test started-at="2025-07-11T13:46:49 UTC" name="Surefire test" finished-at="2025-07-11T13:47:18 UTC" duration-ms="28738">
      <class name="com.emmanuelarhu.tests.PostsTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:49 UTC" name="setup" finished-at="2025-07-11T13:46:50 UTC" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllPosts()[pri:1, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:50 UTC" name="testGetAllPosts" finished-at="2025-07-11T13:46:54 UTC" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllPosts -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:54 UTC" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:54 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:55 UTC" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:55 UTC" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:55 UTC" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetSinglePost(int)[pri:2, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetSinglePost" data-provider="validPostIds" finished-at="2025-07-11T13:46:55 UTC" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetCommentsForPost()[pri:3, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetCommentsForPost" finished-at="2025-07-11T13:46:55 UTC" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsForPost -->
        <test-method signature="testGetCommentsWithPostIdFilter(int)[pri:4, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetCommentsWithPostIdFilter" data-provider="userIdFilters" finished-at="2025-07-11T13:46:55 UTC" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsWithPostIdFilter -->
        <test-method signature="testGetCommentsWithPostIdFilter(int)[pri:4, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetCommentsWithPostIdFilter" data-provider="userIdFilters" finished-at="2025-07-11T13:46:55 UTC" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsWithPostIdFilter -->
        <test-method signature="testGetCommentsWithPostIdFilter(int)[pri:4, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:55 UTC" name="testGetCommentsWithPostIdFilter" data-provider="userIdFilters" finished-at="2025-07-11T13:46:56 UTC" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsWithPostIdFilter -->
        <test-method signature="testGetCommentsWithPostIdFilter(int)[pri:4, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testGetCommentsWithPostIdFilter" data-provider="userIdFilters" finished-at="2025-07-11T13:46:56 UTC" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsWithPostIdFilter -->
        <test-method signature="testGetCommentsWithPostIdFilter(int)[pri:4, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testGetCommentsWithPostIdFilter" data-provider="userIdFilters" finished-at="2025-07-11T13:46:56 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsWithPostIdFilter -->
        <test-method signature="testCreateNewPost(int,java.lang.String,java.lang.String)[pri:5, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testCreateNewPost" data-provider="validPostData" finished-at="2025-07-11T13:46:56 UTC" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post Title]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[This is a test post body]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPost -->
        <test-method signature="testCreateNewPost(int,java.lang.String,java.lang.String)[pri:5, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testCreateNewPost" data-provider="validPostData" finished-at="2025-07-11T13:46:56 UTC" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Test Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Another test post content]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPost -->
        <test-method signature="testCreateNewPost(int,java.lang.String,java.lang.String)[pri:5, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testCreateNewPost" data-provider="validPostData" finished-at="2025-07-11T13:46:56 UTC" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sample post content for testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPost -->
        <test-method signature="testUpdatePost(int,java.lang.String,java.lang.String)[pri:6, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testUpdatePost" data-provider="validPostData" finished-at="2025-07-11T13:46:56 UTC" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post Title]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[This is a test post body]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePost -->
        <test-method signature="testUpdatePost(int,java.lang.String,java.lang.String)[pri:6, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:56 UTC" name="testUpdatePost" data-provider="validPostData" finished-at="2025-07-11T13:46:57 UTC" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Test Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Another test post content]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePost -->
        <test-method signature="testUpdatePost(int,java.lang.String,java.lang.String)[pri:6, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testUpdatePost" data-provider="validPostData" finished-at="2025-07-11T13:46:57 UTC" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sample post content for testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePost -->
        <test-method signature="testPatchPost()[pri:7, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testPatchPost" finished-at="2025-07-11T13:46:57 UTC" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchPost -->
        <test-method signature="testDeletePost()[pri:8, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testDeletePost" finished-at="2025-07-11T13:46:57 UTC" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePost -->
        <test-method signature="testGetNonExistentPost(int)[pri:9, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testGetNonExistentPost" data-provider="invalidPostIds" finished-at="2025-07-11T13:46:57 UTC" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPost -->
        <test-method signature="testGetNonExistentPost(int)[pri:9, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testGetNonExistentPost" data-provider="invalidPostIds" finished-at="2025-07-11T13:46:57 UTC" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPost -->
        <test-method signature="testGetNonExistentPost(int)[pri:9, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testGetNonExistentPost" data-provider="invalidPostIds" finished-at="2025-07-11T13:46:57 UTC" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPost -->
        <test-method signature="testGetNonExistentPost(int)[pri:9, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testGetNonExistentPost" data-provider="invalidPostIds" finished-at="2025-07-11T13:46:57 UTC" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPost -->
        <test-method signature="testGetNonExistentPost(int)[pri:9, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testGetNonExistentPost" data-provider="invalidPostIds" finished-at="2025-07-11T13:46:57 UTC" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPost -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:57 UTC" duration-ms="122" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[52]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:57 UTC" duration-ms="109" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test content]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:57 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:58 UTC" duration-ms="107" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test content]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:58 UTC" duration-ms="110" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test content]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:58 UTC" duration-ms="107" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:58 UTC" duration-ms="112" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test content]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testCreatePostWithInvalidData(int,java.lang.String,java.lang.String)[pri:10, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testCreatePostWithInvalidData" data-provider="invalidPostData" finished-at="2025-07-11T13:46:58 UTC" duration-ms="232" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Post]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithInvalidData -->
        <test-method signature="testDeleteNonExistentPost()[pri:11, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testDeleteNonExistentPost" finished-at="2025-07-11T13:46:58 UTC" duration-ms="119" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.PostsTest.testDeleteNonExistentPost(PostsTest.java:304)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentPost -->
        <test-method signature="testCreatePostWithMalformedJson()[pri:12, instance:com.emmanuelarhu.tests.PostsTest@551de37d]" started-at="2025-07-11T13:46:58 UTC" name="testCreatePostWithMalformedJson" finished-at="2025-07-11T13:46:59 UTC" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePostWithMalformedJson -->
      </class> <!-- com.emmanuelarhu.tests.PostsTest -->
      <class name="com.emmanuelarhu.tests.TodosTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="setup" finished-at="2025-07-11T13:47:11 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllTodos()[pri:1, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="testGetAllTodos" finished-at="2025-07-11T13:47:11 UTC" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllTodos -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:11 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:11 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:11 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:11 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testGetSingleTodo(int)[pri:2, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testGetSingleTodo" data-provider="validTodoIds" finished-at="2025-07-11T13:47:12 UTC" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleTodo -->
        <test-method signature="testCreateNewTodo(int,java.lang.String,boolean)[pri:3, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testCreateNewTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:12 UTC" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewTodo -->
        <test-method signature="testCreateNewTodo(int,java.lang.String,boolean)[pri:3, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testCreateNewTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:12 UTC" duration-ms="121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewTodo -->
        <test-method signature="testCreateNewTodo(int,java.lang.String,boolean)[pri:3, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testCreateNewTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:12 UTC" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewTodo -->
        <test-method signature="testUpdateTodo(int,java.lang.String,boolean)[pri:4, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testUpdateTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:12 UTC" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTodo -->
        <test-method signature="testUpdateTodo(int,java.lang.String,boolean)[pri:4, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:12 UTC" name="testUpdateTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:13 UTC" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTodo -->
        <test-method signature="testUpdateTodo(int,java.lang.String,boolean)[pri:4, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testUpdateTodo" data-provider="validTodoData" finished-at="2025-07-11T13:47:13 UTC" duration-ms="115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Todo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTodo -->
        <test-method signature="testPatchTodo()[pri:5, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testPatchTodo" finished-at="2025-07-11T13:47:13 UTC" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchTodo -->
        <test-method signature="testDeleteTodo()[pri:6, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testDeleteTodo" finished-at="2025-07-11T13:47:13 UTC" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteTodo -->
        <test-method signature="testFilterTodosByCompletionStatus(boolean)[pri:7, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByCompletionStatus" data-provider="completionStatusFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByCompletionStatus -->
        <test-method signature="testFilterTodosByCompletionStatus(boolean)[pri:7, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByCompletionStatus" data-provider="completionStatusFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByCompletionStatus -->
        <test-method signature="testFilterTodosByUser(int)[pri:8, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByUser -->
        <test-method signature="testFilterTodosByUser(int)[pri:8, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByUser -->
        <test-method signature="testFilterTodosByUser(int)[pri:8, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="44" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByUser -->
        <test-method signature="testFilterTodosByUser(int)[pri:8, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByUser -->
        <test-method signature="testFilterTodosByUser(int)[pri:8, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testFilterTodosByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:13 UTC" duration-ms="44" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosByUser -->
        <test-method signature="testGetNonExistentTodo(int)[pri:9, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testGetNonExistentTodo" data-provider="invalidTodoIds" finished-at="2025-07-11T13:47:13 UTC" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTodo -->
        <test-method signature="testGetNonExistentTodo(int)[pri:9, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testGetNonExistentTodo" data-provider="invalidTodoIds" finished-at="2025-07-11T13:47:13 UTC" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTodo -->
        <test-method signature="testGetNonExistentTodo(int)[pri:9, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:13 UTC" name="testGetNonExistentTodo" data-provider="invalidTodoIds" finished-at="2025-07-11T13:47:14 UTC" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTodo -->
        <test-method signature="testGetNonExistentTodo(int)[pri:9, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testGetNonExistentTodo" data-provider="invalidTodoIds" finished-at="2025-07-11T13:47:14 UTC" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTodo -->
        <test-method signature="testGetNonExistentTodo(int)[pri:9, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testGetNonExistentTodo" data-provider="invalidTodoIds" finished-at="2025-07-11T13:47:14 UTC" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentTodo -->
        <test-method signature="testCreateTodoWithInvalidData(int,java.lang.String,boolean)[pri:10, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testCreateTodoWithInvalidData" data-provider="invalidTodoData" finished-at="2025-07-11T13:47:14 UTC" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "java.util.List.contains(Object)" because the return value of "java.util.Map.get(Object)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "java.util.List.contains(Object)" because the return value of "java.util.Map.get(Object)" is null
at org.testng.internal.reflect.ReflectionRecipes.isInstanceOf(ReflectionRecipes.java:75)
at org.testng.internal.reflect.ReflectionRecipes.exactMatch(ReflectionRecipes.java:246)
at org.testng.internal.reflect.ReflectionRecipes.exactMatch(ReflectionRecipes.java:231)
at org.testng.internal.reflect.DirectMethodMatcher.match(DirectMethodMatcher.java:34)
at org.testng.internal.reflect.AbstractNodeMethodMatcher.hasConformance(AbstractNodeMethodMatcher.java:26)
at org.testng.internal.reflect.AbstractMethodMatcher.conforms(AbstractMethodMatcher.java:25)
at org.testng.internal.reflect.DataProviderMethodMatcher.hasConformance(DataProviderMethodMatcher.java:20)
at org.testng.internal.reflect.AbstractMethodMatcher.conforms(AbstractMethodMatcher.java:25)
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:34)
at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTodoWithInvalidData -->
        <test-method signature="testFilterTodosWithInvalidUserId()[pri:11, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testFilterTodosWithInvalidUserId" finished-at="2025-07-11T13:47:14 UTC" duration-ms="36" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.TodosTest.testFilterTodosWithInvalidUserId(TodosTest.java:293)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterTodosWithInvalidUserId -->
        <test-method signature="testDeleteNonExistentTodo()[pri:12, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testDeleteNonExistentTodo" finished-at="2025-07-11T13:47:14 UTC" duration-ms="234" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.TodosTest.testDeleteNonExistentTodo(TodosTest.java:313)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentTodo -->
        <test-method signature="testCreateTodoWithMalformedJson()[pri:13, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testCreateTodoWithMalformedJson" finished-at="2025-07-11T13:47:14 UTC" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTodoWithMalformedJson -->
        <test-method signature="testToggleCompletion()[pri:14, instance:com.emmanuelarhu.tests.TodosTest@997d532]" started-at="2025-07-11T13:47:14 UTC" name="testToggleCompletion" finished-at="2025-07-11T13:47:14 UTC" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToggleCompletion -->
      </class> <!-- com.emmanuelarhu.tests.TodosTest -->
      <class name="com.emmanuelarhu.tests.PhotosTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:06 UTC" name="setup" finished-at="2025-07-11T13:47:06 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllPhotos()[pri:1, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:06 UTC" name="testGetAllPhotos" finished-at="2025-07-11T13:47:07 UTC" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllPhotos -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:07 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:07 UTC" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:07 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:07 UTC" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:07 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testGetSinglePhoto(int)[pri:2, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testGetSinglePhoto" data-provider="validPhotoIds" finished-at="2025-07-11T13:47:08 UTC" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePhoto -->
        <test-method signature="testCreateNewPhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testCreateNewPhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:08 UTC" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPhoto -->
        <test-method signature="testCreateNewPhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testCreateNewPhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:08 UTC" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://example.com/image.png]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://example.com/thumbnail.png]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPhoto -->
        <test-method signature="testCreateNewPhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testCreateNewPhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:08 UTC" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://sample.com/pic.gif]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://sample.com/small.gif]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewPhoto -->
        <test-method signature="testUpdatePhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:08 UTC" name="testUpdatePhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:09 UTC" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePhoto -->
        <test-method signature="testUpdatePhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testUpdatePhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:09 UTC" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://example.com/image.png]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://example.com/thumbnail.png]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePhoto -->
        <test-method signature="testUpdatePhoto(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testUpdatePhoto" data-provider="validPhotoData" finished-at="2025-07-11T13:47:09 UTC" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://sample.com/pic.gif]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://sample.com/small.gif]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePhoto -->
        <test-method signature="testPatchPhoto()[pri:5, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testPatchPhoto" finished-at="2025-07-11T13:47:09 UTC" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchPhoto -->
        <test-method signature="testDeletePhoto()[pri:6, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testDeletePhoto" finished-at="2025-07-11T13:47:09 UTC" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePhoto -->
        <test-method signature="testFilterPhotosByAlbum(int)[pri:7, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testFilterPhotosByAlbum" data-provider="userIdFilters" finished-at="2025-07-11T13:47:09 UTC" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosByAlbum -->
        <test-method signature="testFilterPhotosByAlbum(int)[pri:7, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testFilterPhotosByAlbum" data-provider="userIdFilters" finished-at="2025-07-11T13:47:09 UTC" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosByAlbum -->
        <test-method signature="testFilterPhotosByAlbum(int)[pri:7, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testFilterPhotosByAlbum" data-provider="userIdFilters" finished-at="2025-07-11T13:47:09 UTC" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosByAlbum -->
        <test-method signature="testFilterPhotosByAlbum(int)[pri:7, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testFilterPhotosByAlbum" data-provider="userIdFilters" finished-at="2025-07-11T13:47:09 UTC" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosByAlbum -->
        <test-method signature="testFilterPhotosByAlbum(int)[pri:7, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testFilterPhotosByAlbum" data-provider="userIdFilters" finished-at="2025-07-11T13:47:09 UTC" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosByAlbum -->
        <test-method signature="testGetNonExistentPhoto(int)[pri:8, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testGetNonExistentPhoto" data-provider="invalidPhotoIds" finished-at="2025-07-11T13:47:09 UTC" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPhoto -->
        <test-method signature="testGetNonExistentPhoto(int)[pri:8, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testGetNonExistentPhoto" data-provider="invalidPhotoIds" finished-at="2025-07-11T13:47:09 UTC" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPhoto -->
        <test-method signature="testGetNonExistentPhoto(int)[pri:8, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:09 UTC" name="testGetNonExistentPhoto" data-provider="invalidPhotoIds" finished-at="2025-07-11T13:47:10 UTC" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPhoto -->
        <test-method signature="testGetNonExistentPhoto(int)[pri:8, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testGetNonExistentPhoto" data-provider="invalidPhotoIds" finished-at="2025-07-11T13:47:10 UTC" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPhoto -->
        <test-method signature="testGetNonExistentPhoto(int)[pri:8, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testGetNonExistentPhoto" data-provider="invalidPhotoIds" finished-at="2025-07-11T13:47:10 UTC" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentPhoto -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:10 UTC" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:10 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:11 UTC" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://test.com/thumb.jpg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testCreatePhotoWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:11 UTC" name="testCreatePhotoWithInvalidData" data-provider="invalidPhotoData" finished-at="2025-07-11T13:47:11 UTC" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Photo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://test.com/photo.jpg]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithInvalidData -->
        <test-method signature="testFilterPhotosWithInvalidAlbumId()[pri:10, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:11 UTC" name="testFilterPhotosWithInvalidAlbumId" finished-at="2025-07-11T13:47:11 UTC" duration-ms="244" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.PhotosTest.testFilterPhotosWithInvalidAlbumId(PhotosTest.java:267)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterPhotosWithInvalidAlbumId -->
        <test-method signature="testDeleteNonExistentPhoto()[pri:11, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:11 UTC" name="testDeleteNonExistentPhoto" finished-at="2025-07-11T13:47:11 UTC" duration-ms="105" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.PhotosTest.testDeleteNonExistentPhoto(PhotosTest.java:287)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentPhoto -->
        <test-method signature="testCreatePhotoWithMalformedJson()[pri:12, instance:com.emmanuelarhu.tests.PhotosTest@33abde31]" started-at="2025-07-11T13:47:11 UTC" name="testCreatePhotoWithMalformedJson" finished-at="2025-07-11T13:47:11 UTC" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePhotoWithMalformedJson -->
      </class> <!-- com.emmanuelarhu.tests.PhotosTest -->
      <class name="com.emmanuelarhu.tests.UsersTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:14 UTC" name="setup" finished-at="2025-07-11T13:47:14 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllUsers()[pri:1, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:14 UTC" name="testGetAllUsers" finished-at="2025-07-11T13:47:14 UTC" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:14 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:14 UTC" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:14 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:14 UTC" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:14 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testGetSingleUser(int)[pri:2, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testGetSingleUser" data-provider="validUserIds" finished-at="2025-07-11T13:47:15 UTC" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testCreateNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testCreateNewUser" data-provider="validUserData" finished-at="2025-07-11T13:47:15 UTC" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Emmanuel Arhu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[emmanuelarhu]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emmanuel.arhu@amalitechtraining.org]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewUser -->
        <test-method signature="testCreateNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testCreateNewUser" data-provider="validUserData" finished-at="2025-07-11T13:47:15 UTC" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[johnsmith]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[john.smith@example.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewUser -->
        <test-method signature="testCreateNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:15 UTC" name="testCreateNewUser" data-provider="validUserData" finished-at="2025-07-11T13:47:16 UTC" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jane Doe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[janedoe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jane.doe@example.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewUser -->
        <test-method signature="testUpdateUser(java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testUpdateUser" data-provider="validUserData" finished-at="2025-07-11T13:47:16 UTC" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Emmanuel Arhu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[emmanuelarhu]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emmanuel.arhu@amalitechtraining.org]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method signature="testUpdateUser(java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testUpdateUser" data-provider="validUserData" finished-at="2025-07-11T13:47:16 UTC" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[johnsmith]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[john.smith@example.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method signature="testUpdateUser(java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testUpdateUser" data-provider="validUserData" finished-at="2025-07-11T13:47:16 UTC" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jane Doe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[janedoe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jane.doe@example.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method signature="testDeleteUser()[pri:5, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testDeleteUser" finished-at="2025-07-11T13:47:16 UTC" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method signature="testGetNonExistentUser(int)[pri:6, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testGetNonExistentUser" data-provider="invalidUserIds" finished-at="2025-07-11T13:47:16 UTC" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentUser -->
        <test-method signature="testGetNonExistentUser(int)[pri:6, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testGetNonExistentUser" data-provider="invalidUserIds" finished-at="2025-07-11T13:47:16 UTC" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentUser -->
        <test-method signature="testGetNonExistentUser(int)[pri:6, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:16 UTC" name="testGetNonExistentUser" data-provider="invalidUserIds" finished-at="2025-07-11T13:47:17 UTC" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentUser -->
        <test-method signature="testGetNonExistentUser(int)[pri:6, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testGetNonExistentUser" data-provider="invalidUserIds" finished-at="2025-07-11T13:47:17 UTC" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentUser -->
        <test-method signature="testGetNonExistentUser(int)[pri:6, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testGetNonExistentUser" data-provider="invalidUserIds" finished-at="2025-07-11T13:47:17 UTC" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentUser -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="102" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="99" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="107" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="96" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid-email]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="250" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:17 UTC" duration-ms="105" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testCreateUserWithInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:17 UTC" name="testCreateUserWithInvalidData" data-provider="invalidUserData" finished-at="2025-07-11T13:47:18 UTC" duration-ms="241" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithInvalidData -->
        <test-method signature="testDeleteNonExistentUser()[pri:8, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:18 UTC" name="testDeleteNonExistentUser" finished-at="2025-07-11T13:47:18 UTC" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentUser -->
        <test-method signature="testCreateUserWithMalformedJson()[pri:9, instance:com.emmanuelarhu.tests.UsersTest@273842a6]" started-at="2025-07-11T13:47:18 UTC" name="testCreateUserWithMalformedJson" finished-at="2025-07-11T13:47:18 UTC" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserWithMalformedJson -->
      </class> <!-- com.emmanuelarhu.tests.UsersTest -->
      <class name="com.emmanuelarhu.tests.AlbumsTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="setup" finished-at="2025-07-11T13:46:59 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllAlbums()[pri:1, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetAllAlbums" finished-at="2025-07-11T13:46:59 UTC" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllAlbums -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testGetSingleAlbum(int)[pri:2, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testGetSingleAlbum" data-provider="validAlbumIds" finished-at="2025-07-11T13:46:59 UTC" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleAlbum -->
        <test-method signature="testCreateNewAlbum(int,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:46:59 UTC" name="testCreateNewAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:00 UTC" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Album Title]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewAlbum -->
        <test-method signature="testCreateNewAlbum(int,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:00 UTC" name="testCreateNewAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:00 UTC" duration-ms="121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Album]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewAlbum -->
        <test-method signature="testCreateNewAlbum(int,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:00 UTC" name="testCreateNewAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:00 UTC" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Album]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewAlbum -->
        <test-method signature="testUpdateAlbum(int,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:00 UTC" name="testUpdateAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:00 UTC" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Album Title]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateAlbum -->
        <test-method signature="testUpdateAlbum(int,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:00 UTC" name="testUpdateAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:00 UTC" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Album]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateAlbum -->
        <test-method signature="testUpdateAlbum(int,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:00 UTC" name="testUpdateAlbum" data-provider="validAlbumData" finished-at="2025-07-11T13:47:01 UTC" duration-ms="273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Album]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateAlbum -->
        <test-method signature="testPatchAlbum()[pri:5, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testPatchAlbum" finished-at="2025-07-11T13:47:01 UTC" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchAlbum -->
        <test-method signature="testDeleteAlbum()[pri:6, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testDeleteAlbum" finished-at="2025-07-11T13:47:01 UTC" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAlbum -->
        <test-method signature="testFilterAlbumsByUser(int)[pri:7, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testFilterAlbumsByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:01 UTC" duration-ms="41" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsByUser -->
        <test-method signature="testFilterAlbumsByUser(int)[pri:7, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testFilterAlbumsByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:01 UTC" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsByUser -->
        <test-method signature="testFilterAlbumsByUser(int)[pri:7, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testFilterAlbumsByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:01 UTC" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsByUser -->
        <test-method signature="testFilterAlbumsByUser(int)[pri:7, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testFilterAlbumsByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:01 UTC" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsByUser -->
        <test-method signature="testFilterAlbumsByUser(int)[pri:7, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testFilterAlbumsByUser" data-provider="userIdFilters" finished-at="2025-07-11T13:47:01 UTC" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsByUser -->
        <test-method signature="testGetNonExistentAlbum(int)[pri:8, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testGetNonExistentAlbum" data-provider="invalidAlbumIds" finished-at="2025-07-11T13:47:01 UTC" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentAlbum -->
        <test-method signature="testGetNonExistentAlbum(int)[pri:8, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testGetNonExistentAlbum" data-provider="invalidAlbumIds" finished-at="2025-07-11T13:47:01 UTC" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentAlbum -->
        <test-method signature="testGetNonExistentAlbum(int)[pri:8, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testGetNonExistentAlbum" data-provider="invalidAlbumIds" finished-at="2025-07-11T13:47:01 UTC" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentAlbum -->
        <test-method signature="testGetNonExistentAlbum(int)[pri:8, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testGetNonExistentAlbum" data-provider="invalidAlbumIds" finished-at="2025-07-11T13:47:01 UTC" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentAlbum -->
        <test-method signature="testGetNonExistentAlbum(int)[pri:8, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testGetNonExistentAlbum" data-provider="invalidAlbumIds" finished-at="2025-07-11T13:47:01 UTC" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentAlbum -->
        <test-method signature="testCreateAlbumWithInvalidData(int,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testCreateAlbumWithInvalidData" data-provider="invalidAlbumData" finished-at="2025-07-11T13:47:02 UTC" duration-ms="99" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(int,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testCreateAlbumWithInvalidData([int arg0, java.lang.String arg1])
Arguments: [(java.lang.String) ,(java.lang.String) ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(int,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testCreateAlbumWithInvalidData([int arg0, java.lang.String arg1])
Arguments: [(java.lang.String) ,(java.lang.String) ]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:46)
at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateAlbumWithInvalidData -->
        <test-method signature="testCreateAlbumWithInvalidData(int,java.lang.String)[pri:9, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:01 UTC" name="testCreateAlbumWithInvalidData" data-provider="invalidAlbumData" finished-at="2025-07-11T13:47:02 UTC" duration-ms="97" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Album]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Should receive a valid HTTP response code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(AlbumsTest.java:237)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateAlbumWithInvalidData -->
        <test-method signature="testFilterAlbumsWithInvalidUserId()[pri:10, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:02 UTC" name="testFilterAlbumsWithInvalidUserId" finished-at="2025-07-11T13:47:02 UTC" duration-ms="33" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.AlbumsTest.testFilterAlbumsWithInvalidUserId(AlbumsTest.java:257)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAlbumsWithInvalidUserId -->
        <test-method signature="testDeleteNonExistentAlbum()[pri:11, instance:com.emmanuelarhu.tests.AlbumsTest@6ef81f31]" started-at="2025-07-11T13:47:02 UTC" name="testDeleteNonExistentAlbum" finished-at="2025-07-11T13:47:02 UTC" duration-ms="257" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.AlbumsTest.testDeleteNonExistentAlbum(AlbumsTest.java:277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentAlbum -->
      </class> <!-- com.emmanuelarhu.tests.AlbumsTest -->
      <class name="com.emmanuelarhu.tests.CommentsTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="setup" finished-at="2025-07-11T13:47:02 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllComments()[pri:1, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetAllComments" finished-at="2025-07-11T13:47:02 UTC" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllComments -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:02 UTC" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:02 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:03 UTC" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:03 UTC" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:03 UTC" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[250]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testGetSingleComment(int)[pri:2, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testGetSingleComment" data-provider="validCommentIds" finished-at="2025-07-11T13:47:03 UTC" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleComment -->
        <test-method signature="testCreateNewComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testCreateNewComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:03 UTC" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test comment body]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewComment -->
        <test-method signature="testCreateNewComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testCreateNewComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:03 UTC" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[another@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Another comment content]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewComment -->
        <test-method signature="testCreateNewComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testCreateNewComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:03 UTC" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sample@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sample comment for testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewComment -->
        <test-method signature="testUpdateComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:03 UTC" name="testUpdateComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:04 UTC" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test comment body]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComment -->
        <test-method signature="testUpdateComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testUpdateComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:04 UTC" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Another Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[another@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Another comment content]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComment -->
        <test-method signature="testUpdateComment(int,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testUpdateComment" data-provider="validCommentData" finished-at="2025-07-11T13:47:04 UTC" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sample Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sample@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sample comment for testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComment -->
        <test-method signature="testDeleteComment()[pri:5, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testDeleteComment" finished-at="2025-07-11T13:47:04 UTC" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteComment -->
        <test-method signature="testFilterCommentsByPost(int)[pri:6, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testFilterCommentsByPost" data-provider="userIdFilters" finished-at="2025-07-11T13:47:04 UTC" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsByPost -->
        <test-method signature="testFilterCommentsByPost(int)[pri:6, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testFilterCommentsByPost" data-provider="userIdFilters" finished-at="2025-07-11T13:47:04 UTC" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsByPost -->
        <test-method signature="testFilterCommentsByPost(int)[pri:6, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testFilterCommentsByPost" data-provider="userIdFilters" finished-at="2025-07-11T13:47:04 UTC" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsByPost -->
        <test-method signature="testFilterCommentsByPost(int)[pri:6, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testFilterCommentsByPost" data-provider="userIdFilters" finished-at="2025-07-11T13:47:04 UTC" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsByPost -->
        <test-method signature="testFilterCommentsByPost(int)[pri:6, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testFilterCommentsByPost" data-provider="userIdFilters" finished-at="2025-07-11T13:47:04 UTC" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsByPost -->
        <test-method signature="testGetNonExistentComment(int)[pri:7, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testGetNonExistentComment" data-provider="invalidCommentIds" finished-at="2025-07-11T13:47:04 UTC" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentComment -->
        <test-method signature="testGetNonExistentComment(int)[pri:7, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:04 UTC" name="testGetNonExistentComment" data-provider="invalidCommentIds" finished-at="2025-07-11T13:47:05 UTC" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentComment -->
        <test-method signature="testGetNonExistentComment(int)[pri:7, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testGetNonExistentComment" data-provider="invalidCommentIds" finished-at="2025-07-11T13:47:05 UTC" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[501]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentComment -->
        <test-method signature="testGetNonExistentComment(int)[pri:7, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testGetNonExistentComment" data-provider="invalidCommentIds" finished-at="2025-07-11T13:47:05 UTC" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentComment -->
        <test-method signature="testGetNonExistentComment(int)[pri:7, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testGetNonExistentComment" data-provider="invalidCommentIds" finished-at="2025-07-11T13:47:05 UTC" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentComment -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:05 UTC" duration-ms="108" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:05 UTC" duration-ms="100" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:05 UTC" duration-ms="103" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:05 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="237" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="100" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="108" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid-email]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="107" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="104" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="113" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test body]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testCreateCommentWithInvalidData(int,java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testCreateCommentWithInvalidData" data-provider="invalidCommentData" finished-at="2025-07-11T13:47:06 UTC" duration-ms="97" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Comment]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected 404 Not Found for invalid comment creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCommentWithInvalidData -->
        <test-method signature="testFilterCommentsWithInvalidPostId()[pri:9, instance:com.emmanuelarhu.tests.CommentsTest@6075b2d3]" started-at="2025-07-11T13:47:06 UTC" name="testFilterCommentsWithInvalidPostId" finished-at="2025-07-11T13:47:06 UTC" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.emmanuelarhu.tests.CommentsTest.testFilterCommentsWithInvalidPostId(CommentsTest.java:235)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterCommentsWithInvalidPostId -->
      </class> <!-- com.emmanuelarhu.tests.CommentsTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
