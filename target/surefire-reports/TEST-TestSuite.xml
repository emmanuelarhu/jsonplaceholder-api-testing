<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="TestSuite" time="30.116" tests="221" errors="0" skipped="0" failures="35">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/test-classes:/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/classes:/home/runner/.m2/repository/io/rest-assured/rest-assured/5.5.5/rest-assured-5.5.5.jar:/home/runner/.m2/repository/org/apache/groovy/groovy/4.0.22/groovy-4.0.22.jar:/home/runner/.m2/repository/org/apache/groovy/groovy-xml/4.0.22/groovy-xml-4.0.22.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/home/runner/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/runner/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/home/runner/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/runner/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/home/runner/.m2/repository/io/rest-assured/json-path/5.5.5/json-path-5.5.5.jar:/home/runner/.m2/repository/org/apache/groovy/groovy-json/4.0.22/groovy-json-4.0.22.jar:/home/runner/.m2/repository/io/rest-assured/rest-assured-common/5.5.5/rest-assured-common-5.5.5.jar:/home/runner/.m2/repository/io/rest-assured/xml-path/5.5.5/xml-path-5.5.5.jar:/home/runner/.m2/repository/org/apache/commons/commons-lang3/3.16.0/commons-lang3-3.16.0.jar:/home/runner/.m2/repository/org/testng/testng/7.8.0/testng-7.8.0.jar:/home/runner/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/runner/.m2/repository/com/beust/jcommander/1.82/jcommander-1.82.jar:/home/runner/.m2/repository/org/webjars/jquery/3.6.1/jquery-3.6.1.jar:/home/runner/.m2/repository/io/qameta/allure/allure-testng/2.24.0/allure-testng-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-java-commons/2.24.0/allure-java-commons-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-model/2.24.0/allure-model-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-test-filter/2.24.0/allure-test-filter-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-rest-assured/2.24.0/allure-rest-assured-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-attachments/2.24.0/allure-attachments-2.24.0.jar:/home/runner/.m2/repository/org/freemarker/freemarker/2.3.31/freemarker-2.3.31.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/runner/.m2/repository/org/slf4j/slf4j-simple/2.0.13/slf4j-simple-2.0.13.jar:/home/runner/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/temurin-21-jdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/surefire/surefirebooter-20250711134647040_3.jar /home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/surefire 2025-07-11T13-46-46_957-jvmRun1 surefire-20250711134647040_1tmp surefire_0-20250711134647040_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/test-classes:/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/classes:/home/runner/.m2/repository/io/rest-assured/rest-assured/5.5.5/rest-assured-5.5.5.jar:/home/runner/.m2/repository/org/apache/groovy/groovy/4.0.22/groovy-4.0.22.jar:/home/runner/.m2/repository/org/apache/groovy/groovy-xml/4.0.22/groovy-xml-4.0.22.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/home/runner/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/runner/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/home/runner/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/home/runner/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/runner/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/home/runner/.m2/repository/io/rest-assured/json-path/5.5.5/json-path-5.5.5.jar:/home/runner/.m2/repository/org/apache/groovy/groovy-json/4.0.22/groovy-json-4.0.22.jar:/home/runner/.m2/repository/io/rest-assured/rest-assured-common/5.5.5/rest-assured-common-5.5.5.jar:/home/runner/.m2/repository/io/rest-assured/xml-path/5.5.5/xml-path-5.5.5.jar:/home/runner/.m2/repository/org/apache/commons/commons-lang3/3.16.0/commons-lang3-3.16.0.jar:/home/runner/.m2/repository/org/testng/testng/7.8.0/testng-7.8.0.jar:/home/runner/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/runner/.m2/repository/com/beust/jcommander/1.82/jcommander-1.82.jar:/home/runner/.m2/repository/org/webjars/jquery/3.6.1/jquery-3.6.1.jar:/home/runner/.m2/repository/io/qameta/allure/allure-testng/2.24.0/allure-testng-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-java-commons/2.24.0/allure-java-commons-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-model/2.24.0/allure-model-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-test-filter/2.24.0/allure-test-filter-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-rest-assured/2.24.0/allure-rest-assured-2.24.0.jar:/home/runner/.m2/repository/io/qameta/allure/allure-attachments/2.24.0/allure-attachments-2.24.0.jar:/home/runner/.m2/repository/org/freemarker/freemarker/2.3.31/freemarker-2.3.31.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/runner/.m2/repository/org/slf4j/slf4j-simple/2.0.13/slf4j-simple-2.0.13.jar:/home/runner/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:"/>
    <property name="allure.results.directory" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/allure-results"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/runner"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="surefire.testng.verbose" value="10"/>
    <property name="java.home" value="/usr/lib/jvm/temurin-21-jdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing/target/surefire/surefirebooter-20250711134647040_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.7+6-LTS"/>
    <property name="user.name" value="runner"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.11.0-1015-azure"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-21.0.7+6"/>
    <property name="localRepository" value="/home/runner/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="/home/runner/work/jsonplaceholder-api-testing/jsonplaceholder-api-testing"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="21.0.7+6-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testGetAllPosts" classname="com.emmanuelarhu.tests.PostsTest" time="3.829">
    <system-out><![CDATA[Configuring TestNG with: TestNG740Configurator
🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts
📊 Response Status: 200
📊 Response Time: 1539ms
📊 Response Body Length: 27520
✅ Response time: 1539ms
✅ Successfully retrieved 100 posts
]]></system-out>
    <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
  </testcase>
  <testcase name="testGetSinglePost[1](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.09">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/1
📊 Response Status: 200
📊 Response Time: 34ms
📊 Response Body Length: 292
✅ Response time: 34ms
✅ Successfully retrieved post: posts{id=1, userId=1, title='sunt aut facere repellat provident occaecati excepturi optio reprehenderit'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[2](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.083">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/2
📊 Response Status: 200
📊 Response Time: 31ms
📊 Response Body Length: 278
✅ Response time: 31ms
✅ Successfully retrieved post: posts{id=2, userId=1, title='qui est esse'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[3](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.074">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/3
📊 Response Status: 200
📊 Response Time: 28ms
📊 Response Body Length: 283
✅ Response time: 28ms
✅ Successfully retrieved post: posts{id=3, userId=1, title='ea molestias quasi exercitationem repellat qui ipsa sit aut'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[4](4)" classname="com.emmanuelarhu.tests.PostsTest" time="0.092">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/4
📊 Response Status: 200
📊 Response Time: 40ms
📊 Response Body Length: 270
✅ Response time: 40ms
✅ Successfully retrieved post: posts{id=4, userId=1, title='eum et est occaecati'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[5](5)" classname="com.emmanuelarhu.tests.PostsTest" time="0.085">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/5
📊 Response Status: 200
📊 Response Time: 36ms
📊 Response Body Length: 225
✅ Response time: 36ms
✅ Successfully retrieved post: posts{id=5, userId=1, title='nesciunt quas odio'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[10](6)" classname="com.emmanuelarhu.tests.PostsTest" time="0.079">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/10
📊 Response Status: 200
📊 Response Time: 35ms
📊 Response Body Length: 217
✅ Response time: 35ms
✅ Successfully retrieved post: posts{id=10, userId=1, title='optio molestias id quia eum'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[25](7)" classname="com.emmanuelarhu.tests.PostsTest" time="0.086">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/25
📊 Response Status: 200
📊 Response Time: 36ms
📊 Response Body Length: 237
✅ Response time: 36ms
✅ Successfully retrieved post: posts{id=25, userId=3, title='rem alias distinctio quo quis'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[50](8)" classname="com.emmanuelarhu.tests.PostsTest" time="0.082">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/50
📊 Response Status: 200
📊 Response Time: 39ms
📊 Response Body Length: 333
✅ Response time: 39ms
✅ Successfully retrieved post: posts{id=50, userId=5, title='repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[75](9)" classname="com.emmanuelarhu.tests.PostsTest" time="0.077">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/75
📊 Response Status: 200
📊 Response Time: 33ms
📊 Response Body Length: 301
✅ Response time: 33ms
✅ Successfully retrieved post: posts{id=75, userId=8, title='dignissimos eum dolor ut enim et delectus in'}
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePost[100](10)" classname="com.emmanuelarhu.tests.PostsTest" time="0.325">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/100
📊 Response Status: 200
📊 Response Time: 265ms
📊 Response Body Length: 246
✅ Response time: 265ms
✅ Successfully retrieved post: posts{id=100, userId=10, title='at nam consequatur ea labore ea harum'}
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsForPost" classname="com.emmanuelarhu.tests.PostsTest" time="0.31">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/posts/1/comments
📊 Response Status: 200
📊 Response Time: 252ms
📊 Response Body Length: 1510
✅ Response time: 252ms
✅ Successfully retrieved 5 comments for post 1
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsWithPostIdFilter[1](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.078">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=1
Proxy:			<none>
Request params:	<none>
Query params:	postId=1
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 30ms
✅ Successfully filtered comments by postId=1, found 5 comments
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsWithPostIdFilter[2](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.047">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=2
Proxy:			<none>
Request params:	<none>
Query params:	postId=2
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 28ms
✅ Successfully filtered comments by postId=2, found 5 comments
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsWithPostIdFilter[3](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.061">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=3
Proxy:			<none>
Request params:	<none>
Query params:	postId=3
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 35ms
✅ Successfully filtered comments by postId=3, found 5 comments
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsWithPostIdFilter[4](4)" classname="com.emmanuelarhu.tests.PostsTest" time="0.053">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=4
Proxy:			<none>
Request params:	<none>
Query params:	postId=4
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 32ms
✅ Successfully filtered comments by postId=4, found 5 comments
]]></system-out>
  </testcase>
  <testcase name="testGetCommentsWithPostIdFilter[5](5)" classname="com.emmanuelarhu.tests.PostsTest" time="0.053">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=5
Proxy:			<none>
Request params:	<none>
Query params:	postId=5
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 30ms
✅ Successfully filtered comments by postId=5, found 5 comments
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPost[1, Test Post Title, This is a test post body](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.198">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Post Title",
    "body": "This is a test post body"
}
✅ Response time: 99ms
✅ Successfully created new post with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPost[2, Another Test Post, Another test post content](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.253">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 2,
    "title": "Another Test Post",
    "body": "Another test post content"
}
✅ Response time: 217ms
✅ Successfully created new post with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPost[1, Sample Post, Sample post content for testing](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.139">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Sample Post",
    "body": "Sample post content for testing"
}
✅ Response time: 90ms
✅ Successfully created new post with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testUpdatePost[1, Test Post Title, This is a test post body](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.263">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/posts/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Test Post Title",
    "body": "This is a test post body"
}
✅ Response time: 224ms
✅ Successfully updated post: posts{id=1, userId=1, title='Test Post Title'}
]]></system-out>
  </testcase>
  <testcase name="testUpdatePost[2, Another Test Post, Another test post content](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.131">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/posts/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 2,
    "title": "Another Test Post",
    "body": "Another test post content"
}
✅ Response time: 96ms
✅ Successfully updated post: posts{id=1, userId=2, title='Another Test Post'}
]]></system-out>
  </testcase>
  <testcase name="testUpdatePost[1, Sample Post, Sample post content for testing](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.186">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/posts/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Sample Post",
    "body": "Sample post content for testing"
}
✅ Response time: 90ms
✅ Successfully updated post: posts{id=1, userId=1, title='Sample Post'}
]]></system-out>
  </testcase>
  <testcase name="testPatchPost" classname="com.emmanuelarhu.tests.PostsTest" time="0.132">
    <system-out><![CDATA[Request method:	PATCH
Request URI:	https://jsonplaceholder.typicode.com/posts/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "title": "Patched Post Title"
}
✅ Response time: 90ms
✅ Successfully patched post title: Patched Post Title
]]></system-out>
  </testcase>
  <testcase name="testDeletePost" classname="com.emmanuelarhu.tests.PostsTest" time="0.097">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/posts/1
📊 Response Status: 200
📊 Response Time: 90ms
📊 Response Body Length: 2
✅ Response time: 90ms
✅ Successfully deleted post 1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPost[0](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.031">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/posts/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid post ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPost[-1](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.034">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/posts/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 26ms
✅ Correctly returned 404 for invalid post ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPost[101](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.032">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/posts/101
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 23ms
✅ Correctly returned 404 for invalid post ID: 101
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPost[999](4)" classname="com.emmanuelarhu.tests.PostsTest" time="0.034">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/posts/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid post ID: 999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPost[500](5)" classname="com.emmanuelarhu.tests.PostsTest" time="0.039">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/posts/500
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 29ms
✅ Correctly returned 404 for invalid post ID: 500
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[0, 00, 52](1)" classname="com.emmanuelarhu.tests.PostsTest" time="0.125">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 0,
    "title": "00",
    "body": "52"
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 0,
    "title": "00",
    "body": "52"
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[-1, Test Post, Test content](2)" classname="com.emmanuelarhu.tests.PostsTest" time="0.108">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": -1,
    "title": "Test Post",
    "body": "Test content"
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": -1,
    "title": "Test Post",
    "body": "Test content"
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[999, Test Post, Test content](3)" classname="com.emmanuelarhu.tests.PostsTest" time="0.107">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 999,
    "title": "Test Post",
    "body": "Test content"
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 999,
    "title": "Test Post",
    "body": "Test content"
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[1, , Test content](4)" classname="com.emmanuelarhu.tests.PostsTest" time="0.109">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "",
    "body": "Test content"
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "",
    "body": "Test content"
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[1, Test Post, ](5)" classname="com.emmanuelarhu.tests.PostsTest" time="0.107">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Post",
    "body": ""
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Post",
    "body": ""
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[1, null, Test content](6)" classname="com.emmanuelarhu.tests.PostsTest" time="0.112">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": null,
    "body": "Test content"
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": null,
    "body": "Test content"
}
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithInvalidData[1, Test Post, null](7)" classname="com.emmanuelarhu.tests.PostsTest" time="0.233">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.PostsTest.testCreatePostWithInvalidData(PostsTest.java:285)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Post",
    "body": null
}
Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Post",
    "body": null
}
]]></system-out>
  </testcase>
  <testcase name="testDeleteNonExistentPost" classname="com.emmanuelarhu.tests.PostsTest" time="0.12">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.PostsTest.testDeleteNonExistentPost(PostsTest.java:304)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/posts/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/posts/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testCreatePostWithMalformedJson" classname="com.emmanuelarhu.tests.PostsTest" time="0.425">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/posts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "userId": 1,
    "title": "Test",
    "body": 
✅ Properly handled malformed JSON with status: 500
]]></system-out>
  </testcase>
  <testcase name="testGetAllAlbums" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.086">
    <system-out><![CDATA[🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums
📊 Response Status: 200
📊 Response Time: 26ms
📊 Response Body Length: 9333
✅ Response time: 26ms
✅ Successfully retrieved 100 albums
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[1](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.06">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/1
📊 Response Status: 200
📊 Response Time: 22ms
📊 Response Body Length: 64
✅ Response time: 22ms
✅ Successfully retrieved album: 1
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[2](2)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.068">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/2
📊 Response Status: 200
📊 Response Time: 25ms
📊 Response Body Length: 75
✅ Response time: 25ms
✅ Successfully retrieved album: 2
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[3](3)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.063">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/3
📊 Response Status: 200
📊 Response Time: 30ms
📊 Response Body Length: 61
✅ Response time: 30ms
✅ Successfully retrieved album: 3
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[4](4)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.058">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/4
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 83
✅ Response time: 23ms
✅ Successfully retrieved album: 4
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[5](5)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.057">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/5
📊 Response Status: 200
📊 Response Time: 27ms
📊 Response Body Length: 60
✅ Response time: 27ms
✅ Successfully retrieved album: 5
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[10](6)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.052">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/10
📊 Response Status: 200
📊 Response Time: 22ms
📊 Response Body Length: 66
✅ Response time: 22ms
✅ Successfully retrieved album: 10
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[25](7)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.065">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/25
📊 Response Status: 200
📊 Response Time: 32ms
📊 Response Body Length: 93
✅ Response time: 32ms
✅ Successfully retrieved album: 25
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[50](8)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.063">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/50
📊 Response Status: 200
📊 Response Time: 34ms
📊 Response Body Length: 78
✅ Response time: 34ms
✅ Successfully retrieved album: 50
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[75](9)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.058">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/75
📊 Response Status: 200
📊 Response Time: 28ms
📊 Response Body Length: 65
✅ Response time: 28ms
✅ Successfully retrieved album: 75
]]></system-out>
  </testcase>
  <testcase name="testGetSingleAlbum[100](10)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.057">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/albums/100
📊 Response Status: 200
📊 Response Time: 30ms
📊 Response Body Length: 64
✅ Response time: 30ms
✅ Successfully retrieved album: 100
]]></system-out>
  </testcase>
  <testcase name="testCreateNewAlbum[1, Test Album Title](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.268">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/albums
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Album Title"
}
✅ Response time: 239ms
✅ Successfully created new album with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testCreateNewAlbum[2, Another Album](2)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.121">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/albums
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 2,
    "title": "Another Album"
}
✅ Response time: 85ms
✅ Successfully created new album with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testCreateNewAlbum[1, Sample Album](3)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.118">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/albums
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Sample Album"
}
✅ Response time: 91ms
✅ Successfully created new album with ID: 101
]]></system-out>
  </testcase>
  <testcase name="testUpdateAlbum[1, Test Album Title](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.269">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/albums/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Test Album Title"
}
✅ Response time: 240ms
✅ Successfully updated album 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateAlbum[2, Another Album](2)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.27">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/albums/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 2,
    "title": "Another Album"
}
✅ Response time: 229ms
✅ Successfully updated album 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateAlbum[1, Sample Album](3)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.273">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/albums/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Sample Album"
}
✅ Response time: 232ms
✅ Successfully updated album 1
]]></system-out>
  </testcase>
  <testcase name="testPatchAlbum" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.118">
    <system-out><![CDATA[Request method:	PATCH
Request URI:	https://jsonplaceholder.typicode.com/albums/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "title": "Patched Album Title"
}
✅ Response time: 96ms
✅ Successfully patched album title
]]></system-out>
  </testcase>
  <testcase name="testDeleteAlbum" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.098">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/albums/1
📊 Response Status: 200
📊 Response Time: 89ms
📊 Response Body Length: 2
✅ Response time: 89ms
✅ Successfully deleted album 1
]]></system-out>
  </testcase>
  <testcase name="testFilterAlbumsByUser[1](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.041">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=1
Proxy:			<none>
Request params:	<none>
Query params:	userId=1
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Successfully filtered 10 albums by userId=1
]]></system-out>
  </testcase>
  <testcase name="testFilterAlbumsByUser[2](2)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.045">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=2
Proxy:			<none>
Request params:	<none>
Query params:	userId=2
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 28ms
✅ Successfully filtered 10 albums by userId=2
]]></system-out>
  </testcase>
  <testcase name="testFilterAlbumsByUser[3](3)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.043">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=3
Proxy:			<none>
Request params:	<none>
Query params:	userId=3
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Successfully filtered 10 albums by userId=3
]]></system-out>
  </testcase>
  <testcase name="testFilterAlbumsByUser[4](4)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.054">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=4
Proxy:			<none>
Request params:	<none>
Query params:	userId=4
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 34ms
✅ Successfully filtered 10 albums by userId=4
]]></system-out>
  </testcase>
  <testcase name="testFilterAlbumsByUser[5](5)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.043">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=5
Proxy:			<none>
Request params:	<none>
Query params:	userId=5
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Successfully filtered 10 albums by userId=5
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentAlbum[0](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.042">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 31ms
✅ Correctly returned 404 for invalid album ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentAlbum[-1](2)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.103">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 93ms
✅ Correctly returned 404 for invalid album ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentAlbum[101](3)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.031">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums/101
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 20ms
✅ Correctly returned 404 for invalid album ID: 101
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentAlbum[999](4)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.03">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Correctly returned 404 for invalid album ID: 999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentAlbum[500](5)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.038">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums/500
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 29ms
✅ Correctly returned 404 for invalid album ID: 500
]]></system-out>
  </testcase>
  <testcase name="testCreateAlbumWithInvalidData[0, Test Album](1)" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.097">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(AlbumsTest.java:237)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/albums
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 0,
    "title": "Test Album"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateAlbumWithInvalidData" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.098">
    <failure message="&#10;[public void com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(int,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).&#10;Data provider mismatch&#10;Method: testCreateAlbumWithInvalidData([int arg0, java.lang.String arg1])&#10;Arguments: [(java.lang.String) ,(java.lang.String) ]" type="org.testng.internal.reflect.MethodMatcherException"><![CDATA[org.testng.internal.reflect.MethodMatcherException: 

[public void com.emmanuelarhu.tests.AlbumsTest.testCreateAlbumWithInvalidData(int,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testCreateAlbumWithInvalidData([int arg0, java.lang.String arg1])
Arguments: [(java.lang.String) ,(java.lang.String) ]
	at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:46)
	at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
  </testcase>
  <testcase name="testFilterAlbumsWithInvalidUserId" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.035">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.AlbumsTest.testFilterAlbumsWithInvalidUserId(AlbumsTest.java:257)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=999
Proxy:			<none>
Request params:	<none>
Query params:	userId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/albums?userId=999
Proxy:			<none>
Request params:	<none>
Query params:	userId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testDeleteNonExistentAlbum" classname="com.emmanuelarhu.tests.AlbumsTest" time="0.254">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.AlbumsTest.testDeleteNonExistentAlbum(AlbumsTest.java:277)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/albums/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/albums/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testGetAllComments" classname="com.emmanuelarhu.tests.CommentsTest" time="0.243">
    <system-out><![CDATA[🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 157745
✅ Response time: 23ms
✅ Successfully retrieved 500 comments
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[1](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.075">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/1
📊 Response Status: 200
📊 Response Time: 28ms
📊 Response Body Length: 268
✅ Response time: 28ms
✅ Successfully retrieved comment: 1
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[2](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.067">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/2
📊 Response Status: 200
📊 Response Time: 27ms
📊 Response Body Length: 305
✅ Response time: 27ms
✅ Successfully retrieved comment: 2
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[3](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.061">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/3
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 340
✅ Response time: 23ms
✅ Successfully retrieved comment: 3
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[4](4)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.06">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/4
📊 Response Status: 200
📊 Response Time: 27ms
📊 Response Body Length: 255
✅ Response time: 27ms
✅ Successfully retrieved comment: 4
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[5](5)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.066">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/5
📊 Response Status: 200
📊 Response Time: 25ms
📊 Response Body Length: 260
✅ Response time: 25ms
✅ Successfully retrieved comment: 5
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[10](6)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.063">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/10
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 304
✅ Response time: 23ms
✅ Successfully retrieved comment: 10
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[50](7)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.064">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/50
📊 Response Status: 200
📊 Response Time: 27ms
📊 Response Body Length: 302
✅ Response time: 27ms
✅ Successfully retrieved comment: 50
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[100](8)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.065">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/100
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 280
✅ Response time: 23ms
✅ Successfully retrieved comment: 100
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[250](9)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.066">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/250
📊 Response Status: 200
📊 Response Time: 30ms
📊 Response Body Length: 334
✅ Response time: 30ms
✅ Successfully retrieved comment: 250
]]></system-out>
  </testcase>
  <testcase name="testGetSingleComment[500](10)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.084">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/comments/500
📊 Response Status: 200
📊 Response Time: 28ms
📊 Response Body Length: 257
✅ Response time: 28ms
✅ Successfully retrieved comment: 500
]]></system-out>
  </testcase>
  <testcase name="testCreateNewComment[1, Test Comment, test@example.com, This is a test comment body](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.135">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": "This is a test comment body"
}
✅ Response time: 92ms
✅ Successfully created new comment with ID: 501
]]></system-out>
  </testcase>
  <testcase name="testCreateNewComment[2, Another Comment, another@example.com, Another comment content](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.266">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 2,
    "name": "Another Comment",
    "email": "another@example.com",
    "body": "Another comment content"
}
✅ Response time: 232ms
✅ Successfully created new comment with ID: 501
]]></system-out>
  </testcase>
  <testcase name="testCreateNewComment[1, Sample Comment, sample@example.com, Sample comment for testing](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.127">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Sample Comment",
    "email": "sample@example.com",
    "body": "Sample comment for testing"
}
✅ Response time: 94ms
✅ Successfully created new comment with ID: 501
]]></system-out>
  </testcase>
  <testcase name="testUpdateComment[1, Test Comment, test@example.com, This is a test comment body](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.276">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/comments/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "postId": 1,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": "This is a test comment body"
}
✅ Response time: 243ms
✅ Successfully updated comment 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateComment[2, Another Comment, another@example.com, Another comment content](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.267">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/comments/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "postId": 2,
    "name": "Another Comment",
    "email": "another@example.com",
    "body": "Another comment content"
}
✅ Response time: 231ms
✅ Successfully updated comment 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateComment[1, Sample Comment, sample@example.com, Sample comment for testing](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.251">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/comments/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "postId": 1,
    "name": "Sample Comment",
    "email": "sample@example.com",
    "body": "Sample comment for testing"
}
✅ Response time: 221ms
✅ Successfully updated comment 1
]]></system-out>
  </testcase>
  <testcase name="testDeleteComment" classname="com.emmanuelarhu.tests.CommentsTest" time="0.099">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/comments/1
📊 Response Status: 200
📊 Response Time: 91ms
📊 Response Body Length: 2
✅ Response time: 91ms
✅ Successfully deleted comment 1
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsByPost[1](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.042">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=1
Proxy:			<none>
Request params:	<none>
Query params:	postId=1
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Successfully filtered 5 comments by postId=1
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsByPost[2](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.041">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=2
Proxy:			<none>
Request params:	<none>
Query params:	postId=2
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 26ms
✅ Successfully filtered 5 comments by postId=2
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsByPost[3](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.038">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=3
Proxy:			<none>
Request params:	<none>
Query params:	postId=3
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Successfully filtered 5 comments by postId=3
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsByPost[4](4)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.046">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=4
Proxy:			<none>
Request params:	<none>
Query params:	postId=4
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 31ms
✅ Successfully filtered 5 comments by postId=4
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsByPost[5](5)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.049">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=5
Proxy:			<none>
Request params:	<none>
Query params:	postId=5
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 32ms
✅ Successfully filtered 5 comments by postId=5
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentComment[0](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.03">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Correctly returned 404 for invalid comment ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentComment[-1](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.228">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 220ms
✅ Correctly returned 404 for invalid comment ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentComment[501](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.246">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments/501
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 238ms
✅ Correctly returned 404 for invalid comment ID: 501
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentComment[999](4)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.245">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 237ms
✅ Correctly returned 404 for invalid comment ID: 999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentComment[1000](5)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.034">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments/1000
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid comment ID: 1000
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[0, Test Comment, test@example.com, Test body](1)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.107">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 0,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[-1, Test Comment, test@example.com, Test body](2)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.101">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": -1,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[999, Test Comment, test@example.com, Test body](3)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.103">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 999,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, , test@example.com, Test body](4)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.237">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "",
    "email": "test@example.com",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, Test Comment, , Test body](5)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.099">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": "",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, Test Comment, invalid-email, Test body](6)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.108">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": "invalid-email",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, Test Comment, test@example.com, ](7)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.107">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": ""
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, null, test@example.com, Test body](8)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.104">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": null,
    "email": "test@example.com",
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, Test Comment, null, Test body](9)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.113">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": null,
    "body": "Test body"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateCommentWithInvalidData[1, Test Comment, test@example.com, null](10)" classname="com.emmanuelarhu.tests.CommentsTest" time="0.097">
    <failure message="Expected 404 Not Found for invalid comment creation expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Expected 404 Not Found for invalid comment creation expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.CommentsTest.testCreateCommentWithInvalidData(CommentsTest.java:215)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/comments
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "postId": 1,
    "name": "Test Comment",
    "email": "test@example.com",
    "body": null
}
]]></system-out>
  </testcase>
  <testcase name="testFilterCommentsWithInvalidPostId" classname="com.emmanuelarhu.tests.CommentsTest" time="0.028">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.CommentsTest.testFilterCommentsWithInvalidPostId(CommentsTest.java:235)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=999
Proxy:			<none>
Request params:	<none>
Query params:	postId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/comments?postId=999
Proxy:			<none>
Request params:	<none>
Query params:	postId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testGetAllPhotos" classname="com.emmanuelarhu.tests.PhotosTest" time="0.751">
    <system-out><![CDATA[🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos
📊 Response Status: 200
📊 Response Time: 32ms
📊 Response Body Length: 1071472
✅ Response time: 32ms
✅ Successfully retrieved 5000 photos
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[1](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.252">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/1
📊 Response Status: 200
📊 Response Time: 220ms
📊 Response Body Length: 205
✅ Response time: 220ms
✅ Successfully retrieved photo: 1
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[2](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.056">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/2
📊 Response Status: 200
📊 Response Time: 24ms
📊 Response Body Length: 193
✅ Response time: 24ms
✅ Successfully retrieved photo: 2
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[3](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.056">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/3
📊 Response Status: 200
📊 Response Time: 25ms
📊 Response Body Length: 201
✅ Response time: 25ms
✅ Successfully retrieved photo: 3
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[4](4)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.067">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/4
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 215
✅ Response time: 23ms
✅ Successfully retrieved photo: 4
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[5](5)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.048">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/5
📊 Response Status: 200
📊 Response Time: 17ms
📊 Response Body Length: 206
✅ Response time: 17ms
✅ Successfully retrieved photo: 5
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[10](6)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.063">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/10
📊 Response Status: 200
📊 Response Time: 31ms
📊 Response Body Length: 185
✅ Response time: 31ms
✅ Successfully retrieved photo: 10
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[100](7)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.056">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/100
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 169
✅ Response time: 23ms
✅ Successfully retrieved photo: 100
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[500](8)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.067">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/500
📊 Response Status: 200
📊 Response Time: 28ms
📊 Response Body Length: 195
✅ Response time: 28ms
✅ Successfully retrieved photo: 500
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[1000](9)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.061">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/1000
📊 Response Status: 200
📊 Response Time: 26ms
📊 Response Body Length: 194
✅ Response time: 26ms
✅ Successfully retrieved photo: 1000
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[2500](10)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.056">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/2500
📊 Response Status: 200
📊 Response Time: 24ms
📊 Response Body Length: 210
✅ Response time: 24ms
✅ Successfully retrieved photo: 2500
]]></system-out>
  </testcase>
  <testcase name="testGetSinglePhoto[5000](11)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.061">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/photos/5000
📊 Response Status: 200
📊 Response Time: 26ms
📊 Response Body Length: 212
✅ Response time: 26ms
✅ Successfully retrieved photo: 5000
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPhoto[1, Test Photo, https://test.com/photo.jpg, https://test.com/thumb.jpg](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.133">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 94ms
✅ Successfully created new photo with ID: 5001
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPhoto[2, Another Photo, https://example.com/image.png, https://example.com/thumbnail.png](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.13">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 2,
    "title": "Another Photo",
    "url": "https://example.com/image.png",
    "thumbnailUrl": "https://example.com/thumbnail.png"
}
✅ Response time: 91ms
✅ Successfully created new photo with ID: 5001
]]></system-out>
  </testcase>
  <testcase name="testCreateNewPhoto[1, Sample Photo, https://sample.com/pic.gif, https://sample.com/small.gif](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.117">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Sample Photo",
    "url": "https://sample.com/pic.gif",
    "thumbnailUrl": "https://sample.com/small.gif"
}
✅ Response time: 86ms
✅ Successfully created new photo with ID: 5001
]]></system-out>
  </testcase>
  <testcase name="testUpdatePhoto[1, Test Photo, https://test.com/photo.jpg, https://test.com/thumb.jpg](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.255">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/photos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "albumId": 1,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 228ms
✅ Successfully updated photo 1
]]></system-out>
  </testcase>
  <testcase name="testUpdatePhoto[2, Another Photo, https://example.com/image.png, https://example.com/thumbnail.png](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.116">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/photos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "albumId": 2,
    "title": "Another Photo",
    "url": "https://example.com/image.png",
    "thumbnailUrl": "https://example.com/thumbnail.png"
}
✅ Response time: 88ms
✅ Successfully updated photo 1
]]></system-out>
  </testcase>
  <testcase name="testUpdatePhoto[1, Sample Photo, https://sample.com/pic.gif, https://sample.com/small.gif](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.146">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/photos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "albumId": 1,
    "title": "Sample Photo",
    "url": "https://sample.com/pic.gif",
    "thumbnailUrl": "https://sample.com/small.gif"
}
✅ Response time: 102ms
✅ Successfully updated photo 1
]]></system-out>
  </testcase>
  <testcase name="testPatchPhoto" classname="com.emmanuelarhu.tests.PhotosTest" time="0.118">
    <system-out><![CDATA[Request method:	PATCH
Request URI:	https://jsonplaceholder.typicode.com/photos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "title": "Patched Photo Title"
}
✅ Response time: 89ms
✅ Successfully patched photo title
]]></system-out>
  </testcase>
  <testcase name="testDeletePhoto" classname="com.emmanuelarhu.tests.PhotosTest" time="0.104">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/photos/1
📊 Response Status: 200
📊 Response Time: 93ms
📊 Response Body Length: 2
✅ Response time: 93ms
✅ Successfully deleted photo 1
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosByAlbum[1](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.052">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=1
Proxy:			<none>
Request params:	<none>
Query params:	albumId=1
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 31ms
✅ Successfully filtered 50 photos by albumId=1
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosByAlbum[2](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.049">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=2
Proxy:			<none>
Request params:	<none>
Query params:	albumId=2
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Successfully filtered 50 photos by albumId=2
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosByAlbum[3](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.059">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=3
Proxy:			<none>
Request params:	<none>
Query params:	albumId=3
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 32ms
✅ Successfully filtered 50 photos by albumId=3
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosByAlbum[4](4)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.042">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=4
Proxy:			<none>
Request params:	<none>
Query params:	albumId=4
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 20ms
✅ Successfully filtered 50 photos by albumId=4
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosByAlbum[5](5)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.075">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=5
Proxy:			<none>
Request params:	<none>
Query params:	albumId=5
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 30ms
✅ Successfully filtered 50 photos by albumId=5
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPhoto[0](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.028">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 16ms
✅ Correctly returned 404 for invalid photo ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPhoto[-1](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.036">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 26ms
✅ Correctly returned 404 for invalid photo ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPhoto[5001](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.035">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos/5001
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Correctly returned 404 for invalid photo ID: 5001
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPhoto[9999](4)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.03">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos/9999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 20ms
✅ Correctly returned 404 for invalid photo ID: 9999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentPhoto[10000](5)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.038">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos/10000
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 29ms
✅ Correctly returned 404 for invalid photo ID: 10000
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[0, Test Photo, https://test.com/photo.jpg, https://test.com/thumb.jpg](1)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.111">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 0,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 97ms
🔍 Tested invalid photo data: albumId=0, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[-1, Test Photo, https://test.com/photo.jpg, https://test.com/thumb.jpg](2)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.104">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": -1,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 94ms
🔍 Tested invalid photo data: albumId=-1, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[999, Test Photo, https://test.com/photo.jpg, https://test.com/thumb.jpg](3)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.103">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 999,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 93ms
🔍 Tested invalid photo data: albumId=999, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, , https://test.com/photo.jpg, https://test.com/thumb.jpg](4)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.25">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 238ms
🔍 Tested invalid photo data: albumId=1, title=''
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, Test Photo, , https://test.com/thumb.jpg](5)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.102">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Test Photo",
    "url": "",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 90ms
🔍 Tested invalid photo data: albumId=1, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, Test Photo, https://test.com/photo.jpg, ](6)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.103">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": ""
}
✅ Response time: 91ms
🔍 Tested invalid photo data: albumId=1, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, null, https://test.com/photo.jpg, https://test.com/thumb.jpg](7)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.093">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": null,
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 84ms
🔍 Tested invalid photo data: albumId=1, title='null'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, Test Photo, null, https://test.com/thumb.jpg](8)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.102">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Test Photo",
    "url": null,
    "thumbnailUrl": "https://test.com/thumb.jpg"
}
✅ Response time: 92ms
🔍 Tested invalid photo data: albumId=1, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithInvalidData[1, Test Photo, https://test.com/photo.jpg, null](9)" classname="com.emmanuelarhu.tests.PhotosTest" time="0.102">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "albumId": 1,
    "title": "Test Photo",
    "url": "https://test.com/photo.jpg",
    "thumbnailUrl": null
}
✅ Response time: 92ms
🔍 Tested invalid photo data: albumId=1, title='Test Photo'
]]></system-out>
  </testcase>
  <testcase name="testFilterPhotosWithInvalidAlbumId" classname="com.emmanuelarhu.tests.PhotosTest" time="0.243">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.PhotosTest.testFilterPhotosWithInvalidAlbumId(PhotosTest.java:267)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=9999
Proxy:			<none>
Request params:	<none>
Query params:	albumId=9999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/photos?albumId=9999
Proxy:			<none>
Request params:	<none>
Query params:	albumId=9999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testDeleteNonExistentPhoto" classname="com.emmanuelarhu.tests.PhotosTest" time="0.105">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.PhotosTest.testDeleteNonExistentPhoto(PhotosTest.java:287)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/photos/9999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/photos/9999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testCreatePhotoWithMalformedJson" classname="com.emmanuelarhu.tests.PhotosTest" time="0.243">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/photos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "albumId": 1,
    "title": "Test",
    "url": 
✅ Properly handled malformed JSON with status: 500
]]></system-out>
  </testcase>
  <testcase name="testGetAllTodos" classname="com.emmanuelarhu.tests.TodosTest" time="0.061">
    <system-out><![CDATA[🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos
📊 Response Status: 200
📊 Response Time: 17ms
📊 Response Body Length: 24311
✅ Response time: 17ms
✅ Successfully retrieved 200 todos
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[1](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.055">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/1
📊 Response Status: 200
📊 Response Time: 22ms
📊 Response Body Length: 83
✅ Response time: 22ms
✅ Successfully retrieved todo: 1 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[2](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.052">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/2
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 99
✅ Response time: 23ms
✅ Successfully retrieved todo: 2 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[3](3)" classname="com.emmanuelarhu.tests.TodosTest" time="0.053">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/3
📊 Response Status: 200
📊 Response Time: 21ms
📊 Response Body Length: 84
✅ Response time: 21ms
✅ Successfully retrieved todo: 3 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[4](4)" classname="com.emmanuelarhu.tests.TodosTest" time="0.06">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/4
📊 Response Status: 200
📊 Response Time: 24ms
📊 Response Body Length: 80
✅ Response time: 24ms
✅ Successfully retrieved todo: 4 (completed: true)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[5](5)" classname="com.emmanuelarhu.tests.TodosTest" time="0.054">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/5
📊 Response Status: 200
📊 Response Time: 27ms
📊 Response Body Length: 128
✅ Response time: 27ms
✅ Successfully retrieved todo: 5 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[10](6)" classname="com.emmanuelarhu.tests.TodosTest" time="0.053">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/10
📊 Response Status: 200
📊 Response Time: 20ms
📊 Response Body Length: 109
✅ Response time: 20ms
✅ Successfully retrieved todo: 10 (completed: true)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[50](7)" classname="com.emmanuelarhu.tests.TodosTest" time="0.058">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/50
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 121
✅ Response time: 23ms
✅ Successfully retrieved todo: 50 (completed: true)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[100](8)" classname="com.emmanuelarhu.tests.TodosTest" time="0.049">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/100
📊 Response Status: 200
📊 Response Time: 23ms
📊 Response Body Length: 114
✅ Response time: 23ms
✅ Successfully retrieved todo: 100 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[150](9)" classname="com.emmanuelarhu.tests.TodosTest" time="0.049">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/150
📊 Response Status: 200
📊 Response Time: 21ms
📊 Response Body Length: 102
✅ Response time: 21ms
✅ Successfully retrieved todo: 150 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testGetSingleTodo[200](10)" classname="com.emmanuelarhu.tests.TodosTest" time="0.056">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/200
📊 Response Status: 200
📊 Response Time: 26ms
📊 Response Body Length: 96
✅ Response time: 26ms
✅ Successfully retrieved todo: 200 (completed: false)
]]></system-out>
  </testcase>
  <testcase name="testCreateNewTodo[1, Test Todo, false](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.12">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/todos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Test Todo",
    "completed": false
}
✅ Response time: 89ms
✅ Successfully created new todo with ID: 201
]]></system-out>
  </testcase>
  <testcase name="testCreateNewTodo[2, Another Todo, true](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.121">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/todos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 2,
    "title": "Another Todo",
    "completed": true
}
✅ Response time: 88ms
✅ Successfully created new todo with ID: 201
]]></system-out>
  </testcase>
  <testcase name="testCreateNewTodo[1, Sample Todo, false](3)" classname="com.emmanuelarhu.tests.TodosTest" time="0.125">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/todos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "userId": 1,
    "title": "Sample Todo",
    "completed": false
}
✅ Response time: 87ms
✅ Successfully created new todo with ID: 201
]]></system-out>
  </testcase>
  <testcase name="testUpdateTodo[1, Test Todo, false](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.244">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/todos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Test Todo",
    "completed": false
}
✅ Response time: 218ms
✅ Successfully updated todo 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateTodo[2, Another Todo, true](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.255">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/todos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 2,
    "title": "Another Todo",
    "completed": true
}
✅ Response time: 229ms
✅ Successfully updated todo 1
]]></system-out>
  </testcase>
  <testcase name="testUpdateTodo[1, Sample Todo, false](3)" classname="com.emmanuelarhu.tests.TodosTest" time="0.114">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/todos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "userId": 1,
    "title": "Sample Todo",
    "completed": false
}
✅ Response time: 89ms
✅ Successfully updated todo 1
]]></system-out>
  </testcase>
  <testcase name="testPatchTodo" classname="com.emmanuelarhu.tests.TodosTest" time="0.117">
    <system-out><![CDATA[Request method:	PATCH
Request URI:	https://jsonplaceholder.typicode.com/todos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "completed": true
}
✅ Response time: 91ms
✅ Successfully patched todo 1 completion status
]]></system-out>
  </testcase>
  <testcase name="testDeleteTodo" classname="com.emmanuelarhu.tests.TodosTest" time="0.101">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/todos/1
📊 Response Status: 200
📊 Response Time: 91ms
📊 Response Body Length: 2
✅ Response time: 91ms
✅ Successfully deleted todo 1
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByCompletionStatus[true](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.051">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?completed=true
Proxy:			<none>
Request params:	<none>
Query params:	completed=true
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Successfully filtered 90 todos by completed=true
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByCompletionStatus[false](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.051">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?completed=false
Proxy:			<none>
Request params:	<none>
Query params:	completed=false
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 26ms
✅ Successfully filtered 110 todos by completed=false
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByUser[1](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.044">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=1
Proxy:			<none>
Request params:	<none>
Query params:	userId=1
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 26ms
✅ Successfully filtered 20 todos by userId=1
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByUser[2](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.052">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=2
Proxy:			<none>
Request params:	<none>
Query params:	userId=2
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 31ms
✅ Successfully filtered 20 todos by userId=2
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByUser[3](3)" classname="com.emmanuelarhu.tests.TodosTest" time="0.045">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=3
Proxy:			<none>
Request params:	<none>
Query params:	userId=3
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 22ms
✅ Successfully filtered 20 todos by userId=3
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByUser[4](4)" classname="com.emmanuelarhu.tests.TodosTest" time="0.042">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=4
Proxy:			<none>
Request params:	<none>
Query params:	userId=4
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 23ms
✅ Successfully filtered 20 todos by userId=4
]]></system-out>
  </testcase>
  <testcase name="testFilterTodosByUser[5](5)" classname="com.emmanuelarhu.tests.TodosTest" time="0.043">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=5
Proxy:			<none>
Request params:	<none>
Query params:	userId=5
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Successfully filtered 20 todos by userId=5
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentTodo[0](1)" classname="com.emmanuelarhu.tests.TodosTest" time="0.032">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Correctly returned 404 for invalid todo ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentTodo[-1](2)" classname="com.emmanuelarhu.tests.TodosTest" time="0.032">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Correctly returned 404 for invalid todo ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentTodo[201](3)" classname="com.emmanuelarhu.tests.TodosTest" time="0.039">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos/201
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 28ms
✅ Correctly returned 404 for invalid todo ID: 201
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentTodo[999](4)" classname="com.emmanuelarhu.tests.TodosTest" time="0.037">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid todo ID: 999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentTodo[500](5)" classname="com.emmanuelarhu.tests.TodosTest" time="0.034">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos/500
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 21ms
✅ Correctly returned 404 for invalid todo ID: 500
]]></system-out>
  </testcase>
  <testcase name="testCreateTodoWithInvalidData" classname="com.emmanuelarhu.tests.TodosTest" time="0.035">
    <failure message="Cannot invoke &quot;java.util.List.contains(Object)&quot; because the return value of &quot;java.util.Map.get(Object)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "java.util.List.contains(Object)" because the return value of "java.util.Map.get(Object)" is null
	at org.testng.internal.reflect.ReflectionRecipes.isInstanceOf(ReflectionRecipes.java:75)
	at org.testng.internal.reflect.ReflectionRecipes.exactMatch(ReflectionRecipes.java:246)
	at org.testng.internal.reflect.ReflectionRecipes.exactMatch(ReflectionRecipes.java:231)
	at org.testng.internal.reflect.DirectMethodMatcher.match(DirectMethodMatcher.java:34)
	at org.testng.internal.reflect.AbstractNodeMethodMatcher.hasConformance(AbstractNodeMethodMatcher.java:26)
	at org.testng.internal.reflect.AbstractMethodMatcher.conforms(AbstractMethodMatcher.java:25)
	at org.testng.internal.reflect.DataProviderMethodMatcher.hasConformance(DataProviderMethodMatcher.java:20)
	at org.testng.internal.reflect.AbstractMethodMatcher.conforms(AbstractMethodMatcher.java:25)
	at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:34)
	at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
  </testcase>
  <testcase name="testFilterTodosWithInvalidUserId" classname="com.emmanuelarhu.tests.TodosTest" time="0.037">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.TodosTest.testFilterTodosWithInvalidUserId(TodosTest.java:293)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=999
Proxy:			<none>
Request params:	<none>
Query params:	userId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/todos?userId=999
Proxy:			<none>
Request params:	<none>
Query params:	userId=999
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testDeleteNonExistentTodo" classname="com.emmanuelarhu.tests.TodosTest" time="0.234">
    <failure message="1 expectation failed.&#10;Expected status code &lt;404&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <200>.

	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at com.emmanuelarhu.tests.TodosTest.testDeleteNonExistentTodo(TodosTest.java:313)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/todos/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/todos/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
]]></system-out>
  </testcase>
  <testcase name="testCreateTodoWithMalformedJson" classname="com.emmanuelarhu.tests.TodosTest" time="0.25">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/todos
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "userId": 1,
    "title": "Test",
    "completed": 
✅ Properly handled malformed JSON with status: 500
]]></system-out>
  </testcase>
  <testcase name="testToggleCompletion" classname="com.emmanuelarhu.tests.TodosTest" time="0.165">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/todos/1
📊 Response Status: 200
📊 Response Time: 17ms
📊 Response Body Length: 83
Request method:	PATCH
Request URI:	https://jsonplaceholder.typicode.com/todos/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "completed": true
}
✅ Response time: 95ms
✅ Successfully toggled completion status from false to true
]]></system-out>
  </testcase>
  <testcase name="testGetAllUsers" classname="com.emmanuelarhu.tests.UsersTest" time="0.089">
    <system-out><![CDATA[🔧 Test setup completed with Base URL: https://jsonplaceholder.typicode.com
🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users
📊 Response Status: 200
📊 Response Time: 29ms
📊 Response Body Length: 5645
✅ Response time: 29ms
✅ Successfully retrieved 10 users
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[1](1)" classname="com.emmanuelarhu.tests.UsersTest" time="0.058">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/1
📊 Response Status: 200
📊 Response Time: 25ms
📊 Response Body Length: 509
✅ Response time: 25ms
✅ Successfully retrieved user: users{id=1, name='Leanne Graham', email='Sincere@april.biz'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[2](2)" classname="com.emmanuelarhu.tests.UsersTest" time="0.048">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/2
📊 Response Status: 200
📊 Response Time: 22ms
📊 Response Body Length: 509
✅ Response time: 22ms
✅ Successfully retrieved user: users{id=2, name='Ervin Howell', email='Shanna@melissa.tv'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[3](3)" classname="com.emmanuelarhu.tests.UsersTest" time="0.053">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/3
📊 Response Status: 200
📊 Response Time: 20ms
📊 Response Body Length: 520
✅ Response time: 20ms
✅ Successfully retrieved user: users{id=3, name='Clementine Bauch', email='Nathan@yesenia.net'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[4](4)" classname="com.emmanuelarhu.tests.UsersTest" time="0.266">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/4
📊 Response Status: 200
📊 Response Time: 239ms
📊 Response Body Length: 525
✅ Response time: 239ms
✅ Successfully retrieved user: users{id=4, name='Patricia Lebsack', email='Julianne.OConner@kory.org'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[5](5)" classname="com.emmanuelarhu.tests.UsersTest" time="0.047">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/5
📊 Response Status: 200
📊 Response Time: 18ms
📊 Response Body Length: 507
✅ Response time: 18ms
✅ Successfully retrieved user: users{id=5, name='Chelsey Dietrich', email='Lucio_Hettinger@annie.ca'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[6](6)" classname="com.emmanuelarhu.tests.UsersTest" time="0.046">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/6
📊 Response Status: 200
📊 Response Time: 20ms
📊 Response Body Length: 538
✅ Response time: 20ms
✅ Successfully retrieved user: users{id=6, name='Mrs. Dennis Schulist', email='Karley_Dach@jasper.info'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[7](7)" classname="com.emmanuelarhu.tests.UsersTest" time="0.053">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/7
📊 Response Status: 200
📊 Response Time: 24ms
📊 Response Body Length: 500
✅ Response time: 24ms
✅ Successfully retrieved user: users{id=7, name='Kurtis Weissnat', email='Telly.Hoeger@billy.biz'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[8](8)" classname="com.emmanuelarhu.tests.UsersTest" time="0.059">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/8
📊 Response Status: 200
📊 Response Time: 25ms
📊 Response Body Length: 521
✅ Response time: 25ms
✅ Successfully retrieved user: users{id=8, name='Nicholas Runolfsdottir V', email='Sherwood@rosamond.me'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[9](9)" classname="com.emmanuelarhu.tests.UsersTest" time="0.053">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/9
📊 Response Status: 200
📊 Response Time: 21ms
📊 Response Body Length: 523
✅ Response time: 21ms
✅ Successfully retrieved user: users{id=9, name='Glenna Reichert', email='Chaim_McDermott@dana.io'}
]]></system-out>
  </testcase>
  <testcase name="testGetSingleUser[10](10)" classname="com.emmanuelarhu.tests.UsersTest" time="0.049">
    <system-out><![CDATA[🔄 Attempt 1/4 - GET https://jsonplaceholder.typicode.com/users/10
📊 Response Status: 200
📊 Response Time: 19ms
📊 Response Body Length: 511
✅ Response time: 19ms
✅ Successfully retrieved user: users{id=10, name='Clementina DuBuque', email='Rey.Padberg@karina.biz'}
]]></system-out>
  </testcase>
  <testcase name="testCreateNewUser[Emmanuel Arhu, emmanuelarhu, emmanuel.arhu@amalitechtraining.org](1)" classname="com.emmanuelarhu.tests.UsersTest" time="0.129">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Emmanuel Arhu",
    "username": "emmanuelarhu",
    "email": "emmanuel.arhu@amalitechtraining.org"
}
✅ Response time: 94ms
✅ Successfully created new user with ID: 11
]]></system-out>
  </testcase>
  <testcase name="testCreateNewUser[John Smith, johnsmith, john.smith@example.com](2)" classname="com.emmanuelarhu.tests.UsersTest" time="0.124">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "John Smith",
    "username": "johnsmith",
    "email": "john.smith@example.com"
}
✅ Response time: 97ms
✅ Successfully created new user with ID: 11
]]></system-out>
  </testcase>
  <testcase name="testCreateNewUser[Jane Doe, janedoe, jane.doe@example.com](3)" classname="com.emmanuelarhu.tests.UsersTest" time="0.261">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Jane Doe",
    "username": "janedoe",
    "email": "jane.doe@example.com"
}
✅ Response time: 234ms
✅ Successfully created new user with ID: 11
]]></system-out>
  </testcase>
  <testcase name="testUpdateUser[Emmanuel Arhu, emmanuelarhu, emmanuel.arhu@amalitechtraining.org](1)" classname="com.emmanuelarhu.tests.UsersTest" time="0.257">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/users/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "name": "Emmanuel Arhu",
    "username": "emmanuelarhu",
    "email": "emmanuel.arhu@amalitechtraining.org"
}
✅ Response time: 228ms
✅ Successfully updated user: users{id=1, name='Emmanuel Arhu', email='emmanuel.arhu@amalitechtraining.org'}
]]></system-out>
  </testcase>
  <testcase name="testUpdateUser[John Smith, johnsmith, john.smith@example.com](2)" classname="com.emmanuelarhu.tests.UsersTest" time="0.251">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/users/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "name": "John Smith",
    "username": "johnsmith",
    "email": "john.smith@example.com"
}
✅ Response time: 225ms
✅ Successfully updated user: users{id=1, name='John Smith', email='john.smith@example.com'}
]]></system-out>
  </testcase>
  <testcase name="testUpdateUser[Jane Doe, janedoe, jane.doe@example.com](3)" classname="com.emmanuelarhu.tests.UsersTest" time="0.126">
    <system-out><![CDATA[Request method:	PUT
Request URI:	https://jsonplaceholder.typicode.com/users/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1,
    "name": "Jane Doe",
    "username": "janedoe",
    "email": "jane.doe@example.com"
}
✅ Response time: 91ms
✅ Successfully updated user: users{id=1, name='Jane Doe', email='jane.doe@example.com'}
]]></system-out>
  </testcase>
  <testcase name="testDeleteUser" classname="com.emmanuelarhu.tests.UsersTest" time="0.105">
    <system-out><![CDATA[🔄 Attempt 1/4 - DELETE https://jsonplaceholder.typicode.com/users/1
📊 Response Status: 200
📊 Response Time: 95ms
📊 Response Body Length: 2
✅ Response time: 95ms
✅ Successfully deleted user 1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentUser[0](1)" classname="com.emmanuelarhu.tests.UsersTest" time="0.053">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/users/0
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 42ms
✅ Correctly returned 404 for invalid user ID: 0
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentUser[-1](2)" classname="com.emmanuelarhu.tests.UsersTest" time="0.034">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/users/-1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 23ms
✅ Correctly returned 404 for invalid user ID: -1
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentUser[999](3)" classname="com.emmanuelarhu.tests.UsersTest" time="0.036">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/users/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid user ID: 999
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentUser[11](4)" classname="com.emmanuelarhu.tests.UsersTest" time="0.036">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/users/11
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 25ms
✅ Correctly returned 404 for invalid user ID: 11
]]></system-out>
  </testcase>
  <testcase name="testGetNonExistentUser[100](5)" classname="com.emmanuelarhu.tests.UsersTest" time="0.037">
    <system-out><![CDATA[Request method:	GET
Request URI:	https://jsonplaceholder.typicode.com/users/100
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 24ms
✅ Correctly returned 404 for invalid user ID: 100
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[, testuser, test@example.com](1)" classname="com.emmanuelarhu.tests.UsersTest" time="0.101">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "",
    "username": "testuser",
    "email": "test@example.com"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[Test User, , test@example.com](2)" classname="com.emmanuelarhu.tests.UsersTest" time="0.099">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Test User",
    "username": "",
    "email": "test@example.com"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[Test User, testuser, ](3)" classname="com.emmanuelarhu.tests.UsersTest" time="0.107">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Test User",
    "username": "testuser",
    "email": ""
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[Test User, testuser, invalid-email](4)" classname="com.emmanuelarhu.tests.UsersTest" time="0.096">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Test User",
    "username": "testuser",
    "email": "invalid-email"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[null, testuser, test@example.com](5)" classname="com.emmanuelarhu.tests.UsersTest" time="0.25">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": null,
    "username": "testuser",
    "email": "test@example.com"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[Test User, null, test@example.com](6)" classname="com.emmanuelarhu.tests.UsersTest" time="0.104">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Test User",
    "username": null,
    "email": "test@example.com"
}
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithInvalidData[Test User, testuser, null](7)" classname="com.emmanuelarhu.tests.UsersTest" time="0.242">
    <failure message="Should receive a valid HTTP response code expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Should receive a valid HTTP response code expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertTrue(Assert.java:57)
	at com.emmanuelarhu.tests.UsersTest.testCreateUserWithInvalidData(UsersTest.java:193)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.testng.TestRunner.privateRun(TestRunner.java:848)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
	at org.testng.SuiteRunner.run(SuiteRunner.java:336)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
	at org.testng.TestNG.runSuites(TestNG.java:1114)
	at org.testng.TestNG.run(TestNG.java:1082)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></failure>
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": null,
    "name": "Test User",
    "username": "testuser",
    "email": null
}
]]></system-out>
  </testcase>
  <testcase name="testDeleteNonExistentUser" classname="com.emmanuelarhu.tests.UsersTest" time="0.218">
    <system-out><![CDATA[Request method:	DELETE
Request URI:	https://jsonplaceholder.typicode.com/users/999
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
✅ Response time: 207ms
✅ Handled deletion of non-existent user gracefully
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithMalformedJson" classname="com.emmanuelarhu.tests.UsersTest" time="0.099">
    <system-out><![CDATA[Request method:	POST
Request URI:	https://jsonplaceholder.typicode.com/users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=application/json, application/javascript, text/javascript, text/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Test",
    "username": "test",
    "email": 
✅ Properly handled malformed JSON with status: 500
]]></system-out>
  </testcase>
</testsuite>